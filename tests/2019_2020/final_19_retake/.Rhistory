install.packages("midasr")
load("/home/boris/Documents/klsh/klsh2013/klsh13_data_analysis/klsh_13.Rdata")
View(k13)
library(tidyverse)
library(rio)
library(forecast)
raw_data = import("~/Downloads/number_of_registered_marriages.xls")
raw_data = import("~/Downloads/number_of_registered_marriages.xls", skip.rows = 2)
?read_xls
raw_data = import("~/Downloads/number_of_registered_marriages.xls", skip = 2)
raw_data
raw_data2 = t(raw_data)
raw_data2
marr = ts(raw_data[1, -1])
marr
marr = ts(raw_data[1, -1], start = 2000, freq = 1)
marr
glimpse(raw_data)
autoplot(marr)
marr = ts(x = raw_data[1, -1], start = 2000, freq = 1)
marr = as_ts(raw_data[1, -1], start = 2000, freq = 1)
marr = as.ts(raw_data[1, -1], start = 2000, freq = 1)
autoplot(marr)
ggtsdisplay(marr)
marr = ts(as.vector(raw_data[1, -1]), start = 2000, freq = 1)
ggtsdisplay(marr)
marr
raw_data[1, -1]
as.vector(raw_data[1, -1])
str(as.vector(raw_data[1, -1]))
raw_data %>% rownames_to_column()
marr = ts(unlist(raw_data[1, -1]), start = 2000, freq = 1)
marr
str(marr)
ggtsdisplay(marr)
forecast(marr, h=4)
forecast(marr, h=4) %>% autoplot()
thetaf(marr, h=4) %>% autoplot()
data()
Nile
library(sjPlot)
h <- swiss  # набор данных по кантонам Швейцарии (встроенный в R)
glimpse(h)  # бросим взгляд на данные
help(swiss)
# оценим модель множественной регрессии
model <- lm(data = h, Fertility ~ Catholic + Agriculture + Examination)
# посмотрим результаты оценивания
summary(model)
coeftest(model)
library(lmtest)
coeftest(model)
sjp.lm(model)  # графическое представление интервалов
plot_model(model)
plot_model(model, type = "std")
library(reticulate)
setwd("~/Documents/probability_hse_exams/tests/2019_2020/final_19_retake/pdf_01")
setwd("..")
library(tidyverse)
a = list()
a[[1]] = read_rds("pdf_01/the_exam1.rds")
a[[1]] = read_rds("pdf_01/the_exam.rds")
a[[2]] = read_rds("pdf_02/the_exam.rds")
a
b = a[[1]][[1]]
bv = as.vector(b)
bv
data_2_answers = function(filename) {
exam_data = read_rds(filename)
exam_vector = unlist(exam_data)
exam_tibble = tibble(value = exam_vector, branch = names(value))
exam_tibble = mutate(exam_tibble, n_dots = str_count(branch, pattern = "\\."))
max_dots = max(exam_tibble$n_dots)
exam_tibble = mutate(exam_tibble, branch = pmap_chr(list(branch, n_dots),
~paste0(.x, rep(".", max_dots - .y), collapse = "")))
exam_tibble = tidyr::separate(exam_tibble, branch, into = c("variant", "exercise", "level1", "level2"), sep = "\\.")
exam_tibble = select(exam_tibble, -n_dots)
ex_answers = filter(exam_tibble,
(level1 == "metainfo") & ((level2 == "name") | (str_detect(level2, "solution")))) %>%
select(-level1)
ex_answers_wide = spread(ex_answers, level2, value)
ex_answers_wide = mutate(ex_answers_wide, ans_letter =
pmap_chr(list(solution1, solution2, solution3, solution4, solution5),
~ paste0(ifelse(..1, "a", ""),
ifelse(..2, "b", ""),
ifelse(..3, "c", ""),
ifelse(..4, "d", ""),
ifelse(..5, "e", ""), collape = "")))
ex_answers_wide = select(ex_answers_wide, variant, exercise, name, ans_letter)
return(ex_answers_wide)
}
filename1 = "~/Documents/probability_hse_exams/tests/2019_2020/final_19_retake/pdf_01/the_exam.rds"
filename2 = "~/Documents/probability_hse_exams/tests/2019_2020/final_19_retake/pdf_01/the_exam.rds"
answers1 = data_2_answers(filename1)
answers2 = data_2_answers(filename2)
true_answers = bind_rows(answers1, answers2)
true_answers = mutate(true_answers, q_no = as.numeric(str_extract(exercise, "[0-9]+$"))) %>% select(-exercise)
export(true_answers, "true_answers_v00.xlsx")
library(rio)
export(true_answers, "true_answers_v00.xlsx")
getwd()
filename1 = "~/Documents/probability_hse_exams/tests/2019_2020/final_19_retake/pdf_01/the_exam.rds"
filename2 = "~/Documents/probability_hse_exams/tests/2019_2020/final_19_retake/pdf_02/the_exam.rds"
answers1 = data_2_answers(filename1)
answers2 = data_2_answers(filename2)
true_answers = bind_rows(answers1, answers2)
true_answers = mutate(true_answers, q_no = as.numeric(str_extract(exercise, "[0-9]+$"))) %>% select(-exercise)
export(true_answers, "true_answers_v00.xlsx")
